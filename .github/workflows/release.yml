on:
  release:
    types: [created]
  workflow_dispatch:
name: Handle Release
jobs:
  generate:
    name: Create release-artifacts
    runs-on: windows-2025
    environment: Build Settings
    steps:
      - name: info
        shell: pwsh
        run: dir
      - name: Install signtool
        shell: pwsh
        run: winget install -e --id Microsoft.Azure.TrustedSigningClientTools --accept-source-agreements --accept-package-agreements
      - name: Add signtool to github path
        shell: pwsh
        run: Get-ChildItem C:\WinDDK\*\bin\amd64 | Select-Object -Property FullName | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      - name: Make fake registry key for vigem bus
        shell: pwsh
        run: New-Item -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\ViGEMBus'
      - name: Make fake registry property for vigem bus
        shell: pwsh
        run: New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\ViGEMBus' -Name 'Display Name' -PropertyType 'String' -Value 'nefarius virtual gamepad emulation bus driver' 
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install poetry
        run: python -m pip install poetry
      - name: Install dependencies
        run: poetry install --with=dev
      - name: install vigembus
        shell: pwsh
        run: $path = Join-Path $(poetry env info --path) "Lib\site-packages\vgamepad\win\vigem\install\x64\ViGEmBusSetup_x64.msi"; Start-Process $path /passive -Wait
      - name: Build
        env:
          B64_ENCODED_CERT: ${{ secrets.SIGNING_CERT }}
          CERT_PASSWORD: ${{ secrets.SIGNING_CERT_PASSWORD }}
        run: poetry run dist
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ./dist/pyrogyro.zip
          asset_name: pyrogyro.zip
          asset_content_type: application/zip